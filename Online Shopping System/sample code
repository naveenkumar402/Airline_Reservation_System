
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
class User {
	private String userId;
	private String username;
	private long mob;
	private String address;
	User(String userId,String username,long mob,String address){
		this.userId=userId;
		this.username=username;
		this.mob=mob;
		this.address=address;
	}
	public String getusername() {
		return username;
	}
	public String getuserid() {
		return userId;
	}
	public long getmob() {
		return mob;
	}
	public String getaddress() {
		return address;
	}
}
class Product{
	private String productname;
	private double cost;
	Product(String productname,double cost){
		this.productname=productname;
		this.cost=cost;
	}
	public String getproductname() {
		return productname;
	}
	public double getcost() {
		return cost;
	}
}
class ProductSelection{
	User user;
	Product product;
	int quantity;
	ProductSelection(User user,Product product,int quantity){
		this.user=user;
		this.product=product;
		this.quantity=quantity;
	}
	public User getuser() {
		return user;
	}
	public Product getproduct() {
		return product;
	}
	public int getquantity() {
		return quantity;
	}
}
class ProductPurchase{
	List<User> user;
	List<Product> product;
	List<ProductSelection> prosel;
	ProductPurchase(){
		user=new ArrayList<>();
		product=new ArrayList<>();
		prosel=new ArrayList<>();	
	}
	public Product findProduct(String pname) {
		for(Product p:product) {
			if(p.getproductname().equalsIgnoreCase(pname))
				return p;
		}
		return null;
	}
	public User finduserid(String userid) {
		for(User u:user) {
			if(u.getuserid().equalsIgnoreCase(userid))
				return u;
		}
		return null;
	}
	public void addcart(ProductSelection p) {
		prosel.add(p);
	}
	public void addproduct(Product p) {
		product.add(p);
	}
	public void adduser(User u) {
		user.add(u);
	}
	public List<User> getallUser(){
		return user;
	}
	public List<Product> getallProduct() {
		return product;
	}
	public List<ProductSelection> getallselect(){
		return prosel;
	}
	public ProductSelection findselectedproduct(String pname) {
		for(ProductSelection p:prosel) {
			if(p.getproduct().getproductname().equalsIgnoreCase(pname))
				return p;
		}
		return null;
	}
	public void removeproduct(ProductSelection p) {
		prosel.remove(p);
	}	
}

public class OnlineShoppingSystem{
	public static void main(String args[]) {
		ProductPurchase purchase=new ProductPurchase();
		Scanner sc=new Scanner(System.in);
		boolean b=true;
		System.out.println("******WELCOME TO ONLINE SHOPPING******");
		while(b) {
			System.out.println("1.Create Account");
			System.out.println("2.View Products");
			System.out.println("3.Add to cart");
			System.out.println("4.View cart Product");
			System.out.println("5.Edit cart Product");
			System.out.println("6.Purchase the Product");
			System.out.println("7.Exit");
			System.out.println("Select 1-5:");
			int choice=sc.nextInt();
			switch(choice) {
			case 1:
				int id=100;
				System.out.println("Enter Name:");
				String name=sc.next();
				System.out.println("Enter Mobile number:");
				long mob=sc.nextLong();
				System.out.println("Enter Address:");
				String address=sc.next();
				String userid="US"+id++;
				User u1=new User(userid,name,mob,address);
				purchase.adduser(u1);
				System.out.println("Username created successfully");
				System.out.println("Your userId is: "+userid.toString());
				break;
			case 2:
				System.out.println("Select Category");
				System.out.println("1.Mobile");
				System.out.println("2.Laptop");
				System.out.println("Enter 1 or 2:");
				int c=sc.nextInt();
				if(c==1) {
					Product p1=new Product("Vivo",20000);
					Product p2=new Product("Oppo",20000);
					Product p3=new Product("Oneplus",30000);
					Product p4=new Product("iPhone",100000);
					purchase.addproduct(p1);
					purchase.addproduct(p2);
					purchase.addproduct(p3);
					purchase.addproduct(p4);
				}
				else if(c==2){
					Product p1=new Product("HP",50000);
					Product p2=new Product("Dell",50000);
					Product p3=new Product("MacBook",200000);
					purchase.addproduct(p1);
					purchase.addproduct(p2);
					purchase.addproduct(p3);
				}
				for(Product p:purchase.getallProduct()) {
					System.out.println("Product name: "+p.getproductname()+"\tPrice: "+p.getcost());
				}
				break;
			case 3:
				System.out.println("Enter your UserID:");
				String uid=sc.next();
				User user=purchase.finduserid(uid);
				if(user != null) {
					System.out.println("Enter Product name:");
					String pname=sc.next();
					Product product=purchase.findProduct(pname);
					if(product!=null) {
						System.out.println("Enter Quantity:");
						int quan=sc.nextInt();
						ProductSelection p=new ProductSelection(user,product,quan);
						purchase.addcart(p);
					}
					else {
						System.out.println("Product not Available");
					}
				}
				else { 
					System.out.println("UserID not exists Create new account");
					choice=1;
				}
				break;
			case 4:
				double sum=0;
				for(ProductSelection ps:purchase.getallselect()) {
					System.out.print("Product name: "+ps.getproduct().getproductname());
					System.out.print("\tPrice: "+ps.getproduct().getcost());
					sum=sum+ps.getproduct().getcost()*ps.getquantity();
				}
				System.out.println("Total Cost of Selected Product: "+sum);
				break;
			case 5:
				System.out.println("Enter the Product: ");
				String s=sc.next();
				ProductSelection p=purchase.findselectedproduct(s);
				if(p !=null) {
					purchase.removeproduct(p);
					System.out.println("Product removed Successfully");
				}
				else System.out.println("Product not Found");
				break;
			case 6:
				String pay=null;
				String billname=null;
				String addrs=null;
				double amount=0;
				for(ProductSelection ps:purchase.getallselect()) {
					pay="Product name: "+ps.getproduct().getproductname()+"   Price: "+ps.getproduct().getcost();
					System.out.println(pay.toString());
					billname="Name: "+ps.getuser().getusername();
					amount=amount+ps.getproduct().getcost()*ps.getquantity();
					addrs="Address: "+ps.getuser().getaddress().lines()+"Mobile: "+ps.getuser().getmob();
				}
				System.out.println("Total Amount: "+amount);
				System.out.println(billname.toString());
				System.out.println(addrs.toString());
				
				break;
			case 7:
				System.out.println("*******THANK YOU*******");
				sc.close();
				b=false;
				break;
			default:
				System.out.println("Invalid option");
				break;	
			}
		}
	}
}


